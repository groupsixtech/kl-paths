%define PATH_CONFIG_FILENAME defaultpath.klt

%define RBT_GRP 1
--frames
%define USER_FRAME_NO 9
%define TOOL_FRAME_NO 3

%define PATH_DATA_TYPE XYZWPR

%define DEFAULT_CONFIG 'F U T, 0, 0, 0'
%defeval DEFAULT_POSE new_pose(0,0,0,0,0,0, DEFAULT_CONFIG)

--default register list
--R[]s
%define SPEED_REGISTER 200
%define TERM_REGISTER 255
%define TYPE_REGISTER 253
%define CODE_REGISTER 259
--PR[]s
%define TOOL_OFFSET_REG 20
%define POSE_REG 85
%define ARC_REG1 80
%define ARC_REG2 81
%define ARC_REG3 82

--default parameter list
%define TOOLING_SPEED 12
%define LINKING_SPEED 50
%define PAD_IDOD 1

--tool orientation
%define TOOL_ORIENT_UP 0,0,0
%define TOOL_ORIENT_DOWN 0,0,180

--programs
%define LINEAR_MOVE_PROG 'MOVE_LINE'
%define ARC_MOVE_PROG 'MOVE_CIRC'

--**dont change
%define LEFTSIDE 1
%define RIGHTSIDE 2
--**change
%defeval OD_CORNER RIGHTSIDE
%defeval ID_CORNER LEFTSIDE
%defeval PLATE_CORNER LEFTSIDE

%mode push
%mode string QQQ "`" "`" "\\"

%define define_paths_headers(parent) `declare_member(parent,new_pose,parent,npose)
ROUTINE new_pose(x,y,z,w,p,r : REAL; cnfg : STRING) : PATH_DATA_TYPE FROM parent
declare_member(parent,tpath2pos,parent,tppse)
ROUTINE tpath2pos(nde : t_TOOLPATH) : PATH_DATA_TYPE FROM parent
declare_member(parent,set_posereg,parent,stpr)
ROUTINE set_posereg(nde : PATH_DATA_TYPE; reg_no : INTEGER) FROM parent
declare_member(parent,poseMul,parent,psmul)
ROUTINE poseMul(nde1 : PATH_DATA_TYPE; nde2 : PATH_DATA_TYPE) : PATH_DATA_TYPE FROM parent
declare_member(parent,poseInv,parent,psinv)
ROUTINE poseInv(nde1 : PATH_DATA_TYPE) : PATH_DATA_TYPE FROM parent
`

%define define_paths_members(parent) `declare_member(parent,new_pose,parent,npose)
ROUTINE new_pose(x,y,z,w,p,r : REAL; cnfg : STRING) : PATH_DATA_TYPE
  BEGIN
    RETURN( POS(x,y,z,w,p,r, pose__set_config(cnfg)) )
  END new_pose
declare_member(parent,tpath2pos,parent,tppse)
ROUTINE tpath2pos(nde : t_TOOLPATH) : PATH_DATA_TYPE
  BEGIN
    RETURN(nde.v)
  END tpath2pos
declare_member(parent,set_posereg,parent,stpr)
ROUTINE set_posereg(nde : PATH_DATA_TYPE; reg_no : INTEGER)
  BEGIN
    pose__set_posreg_xyz(nde, reg_no, RBT_GRP)
  END set_posereg
declare_member(parent,poseMul,parent,psmul)
ROUTINE poseMul(nde1 : PATH_DATA_TYPE; nde2 : PATH_DATA_TYPE) : PATH_DATA_TYPE
  BEGIN
    RETURN(nde1:nde2)
  END poseMul
declare_member(parent,poseInv,parent,psinv)
ROUTINE poseInv(nde1 : PATH_DATA_TYPE) : PATH_DATA_TYPE
  BEGIN
    RETURN(INV(nde1))
  END poseInv
`
%mode pop


--pathplan
------------------
%defeval PATH_PLAN_NAME tstpln
%include vecpathplan.klt

%mode push
%mode string QQQ "`" "`" "\\"
%define define_pathplan(object_name,cnfg_file) `%class object_name('pathplan.klc','pathplan.klh','cnfg_file')`
%mode pop
------------------