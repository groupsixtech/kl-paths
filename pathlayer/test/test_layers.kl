PROGRAM test_layers
%NOBUSYLAMP
%COMMENT = 'test static layer class'
%NOPAUSESHFT
%NOPAUSE = ERROR + TPENABLE + COMMAND
%NOABORT = ERROR + COMMAND

%ifeq DEBUG_BUILD FALSE
%undef DEBUG_BUILD
%endif

%ifeq DEBUG_PLOT_POINTS FALSE
%undef DEBUG_PLOT_POINTS
%endif

%ifdef DEBUG_BUILD
%define SHOW_DEBUG FALSE
%define LOG_NAME 'RD:layer_debug.DT'
%define PLOT_NAME 'RD:path_plot.DT'
%include display.c.klt
%endif

%include systemvars.klt
%include pose.const.klt
%include pathlib.klt
%include toolpath.structs.klt
%include lam.klt
%include default_lam.klt

VAR
  layparams  : t_PATH_LAYER
  pthparams : t_PATH_PARAM
  mtnprm : t_MOTION_PRM
  toolprm : t_TOOL_VARS
  --work parameters
  lsrprm : t_LASER
  powprm : t_POWDER

  -- set parameters
  file_name : STRING[20]
  run_type : INTEGER
  --
  pearch_rad : REAL
  pearch_dist : REAL


%include display.klh
%from systemlib.klh %import VEC
%from pose.klh %import set_config
%from pathlib.klh %import new_coord_sys, new_layer_params, new_make_params, new_motion_params, new_tool_params
%include lamlib.klh

--layer object
%class tstlst('pathlayerstatic.klc','pathlayerstatic.klh','defaultstaticrotlayer.klt')

-- --draw layer object
-- class tstldt('pathlayerdraw.klc','pathlayerdraw.klh','defaultdrawrotlayer.klt')

%ifdef DEBUG_BUILD
-- user display log
%class usrdis('dispclass.klc','dispclass.klh')
%endif
%ifdef DEBUG_PLOT_POINTS
-- plot debug
%class usrplt('dispclass.klc','dispclass.klh')
%endif

ROUTINE uninit_vars
  --file
%define TEST_FILE_NAME 'FR:TEST103599.csv'
%define LASER_POWER 3000
  --perch dist
%define DRAW_RADIUS 75
%define START_DIST 520
  --index
%define STARTPASS 0
%define STARTLAYER 0
  --powder
%defeval TEST_POWDER POWDER_INCONEL
%define POWDER_HOPPER 2
%define POWDER_RPM 2.6
%define POWDER_LPM 4
%define POWDER_FLOW_RATE 0.95
%define POWDER_LAYER_HEIGHT 0.05*25.4
          --change to MOVE_WORKING
%defeval PROG_TYPE MOVE_DRYRUN
  BEGIN
    IF UNINIT(file_name) THEN file_name = TEST_FILE_NAME ; ENDIF
    IF UNINIT(run_type) THEN run_type = PROG_TYPE ; ENDIF

    IF UNINIT(pearch_rad) THEN pearch_rad = DRAW_RADIUS ; ENDIF
    IF UNINIT(pearch_dist) THEN pearch_dist = START_DIST ; ENDIF

    IF UNINIT(lsrprm.power) THEN
      lsrprm = lamlib__new_laser_params(LASER_POWER)
    ENDIF
    IF UNINIT(powprm.powder) THEN 
      powprm = lamlib__new_powder_params(POWDER_HOPPER, TEST_POWDER, POWDER_RPM, POWDER_LPM, POWDER_FLOW_RATE, POWDER_LAYER_HEIGHT)
    ENDIF
    IF UNINIT(layparams.start_pass) THEN
      layparams = paths__new_layer_params(STARTPASS, STARTLAYER)
    ENDIF
  END uninit_vars

ROUTINE t_stat_pad
  VAR
  --offsets
%define HEIGHT_OFFSET 0
%define X_OFFSET 0
%define Y_OFFSET 0
  --path params
%define TOOL_TILT 0
  --motion params
%define RETRACT_HEIGHT 30
%define RETRACT_LENGTH 50
%define LINKING_SPEED 100
%define LINKING_STEP 20
    frm : XYZWPR
    origin : XYZWPR
    cds : t_COORD_SYS
  BEGIN
    frm = POS(0,0,0,0,0,0, pose__set_config(DEFAULT_CONFIG))
    cds = paths__new_coord_sys(PTH_CYLINDER, VERT_AXES)
    origin = POS(0,pearch_dist,pearch_rad,0,0,0,pose__set_config(DEFAULT_CONFIG))

    --initialize paths
      -- coord_frm, coord_sys (t_COORD_SYS), origin, idod, doPathPlan
    pthparams = paths__new_make_params(frm, cds, origin, 1, FALSE)
    --initialize motion
      -- program_type, interpolate, tool_speed, link_speed, useSetSpeed, tool_step, link_step, aprch_ofst, deprt_ofst, inDegrees
    mtnprm = paths__new_motion_params(run_type, TRUE, 1, LINKING_SPEED, FALSE, 1, LINKING_STEP, 0, 0, FALSE)
      -- retractDist, orient, tool pitch, leader pitch, idod, coord_system
    toolprm = paths__new_tool_params(VEC(0,RETRACT_LENGTH,RETRACT_HEIGHT), VEC(TOOL_ORIENT_DOWN), TOOL_TILT, 0, 1, cds)

    --constructor
    tstlst__new(layparams, pthparams, mtnprm, toolprm, lsrprm, powprm)

    --load layout & determine number of layers and passes
    tstlst__import_layout(TEST_FILE_NAME)

    --run loaded layout
    tstlst__run

    -- --cleanup memory
    -- tstlst__delete

  END t_stat_pad

BEGIN

%ifdef DEBUG_BUILD
  --(log_filename, show_date, show_debug, show_info)
  -- LOG_NAME
  usrdis__new('', FALSE, TRUE, TRUE)
  usrdis__clear_file
%endif
%ifdef DEBUG_PLOT_POINTS
  -- PLOT_NAME
  usrplt__new(PLOT_NAME, FALSE, TRUE, TRUE)
  usrplt__clear_file
%endif

-- uninit variables
uninit_vars

t_stat_pad

%ifdef DEBUG_BUILD
  usrdis__write_pipe
  usrdis__delete
%endif

END test_layers